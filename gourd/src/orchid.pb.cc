// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: orchid.proto

#include "orchid.pb.h"

#include <algorithm>

#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/wire_format_lite.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)
#include <google/protobuf/port_def.inc>

PROTOBUF_PRAGMA_INIT_SEG
namespace palm {
namespace orchid {
namespace v1 {
constexpr WechatMiniProgramLoginRequest::WechatMiniProgramLoginRequest(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : app_id_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string)
  , code_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string){}
struct WechatMiniProgramLoginRequestDefaultTypeInternal {
  constexpr WechatMiniProgramLoginRequestDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~WechatMiniProgramLoginRequestDefaultTypeInternal() {}
  union {
    WechatMiniProgramLoginRequest _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT WechatMiniProgramLoginRequestDefaultTypeInternal _WechatMiniProgramLoginRequest_default_instance_;
constexpr WechatMiniProgramLoginResponse::WechatMiniProgramLoginResponse(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : unionid_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string)
  , openid_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string)
  , session_key_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string){}
struct WechatMiniProgramLoginResponseDefaultTypeInternal {
  constexpr WechatMiniProgramLoginResponseDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~WechatMiniProgramLoginResponseDefaultTypeInternal() {}
  union {
    WechatMiniProgramLoginResponse _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT WechatMiniProgramLoginResponseDefaultTypeInternal _WechatMiniProgramLoginResponse_default_instance_;
constexpr WechatMiniProgramPhoneNumberRequest::WechatMiniProgramPhoneNumberRequest(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : app_id_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string)
  , code_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string){}
struct WechatMiniProgramPhoneNumberRequestDefaultTypeInternal {
  constexpr WechatMiniProgramPhoneNumberRequestDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~WechatMiniProgramPhoneNumberRequestDefaultTypeInternal() {}
  union {
    WechatMiniProgramPhoneNumberRequest _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT WechatMiniProgramPhoneNumberRequestDefaultTypeInternal _WechatMiniProgramPhoneNumberRequest_default_instance_;
constexpr WechatMiniProgramPhoneNumberResponse::WechatMiniProgramPhoneNumberResponse(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : phone_number_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string)
  , pure_phone_number_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string)
  , country_code_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string)
  , water_mark_(uint64_t{0u}){}
struct WechatMiniProgramPhoneNumberResponseDefaultTypeInternal {
  constexpr WechatMiniProgramPhoneNumberResponseDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~WechatMiniProgramPhoneNumberResponseDefaultTypeInternal() {}
  union {
    WechatMiniProgramPhoneNumberResponse _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT WechatMiniProgramPhoneNumberResponseDefaultTypeInternal _WechatMiniProgramPhoneNumberResponse_default_instance_;
constexpr WechatOauth2QrConnectRequest::WechatOauth2QrConnectRequest(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : app_id_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string)
  , redirect_uri_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string)
  , state_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string)
  , language_(0)
{}
struct WechatOauth2QrConnectRequestDefaultTypeInternal {
  constexpr WechatOauth2QrConnectRequestDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~WechatOauth2QrConnectRequestDefaultTypeInternal() {}
  union {
    WechatOauth2QrConnectRequest _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT WechatOauth2QrConnectRequestDefaultTypeInternal _WechatOauth2QrConnectRequest_default_instance_;
constexpr WechatOauth2QrConnectResponse::WechatOauth2QrConnectResponse(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : url_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string){}
struct WechatOauth2QrConnectResponseDefaultTypeInternal {
  constexpr WechatOauth2QrConnectResponseDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~WechatOauth2QrConnectResponseDefaultTypeInternal() {}
  union {
    WechatOauth2QrConnectResponse _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT WechatOauth2QrConnectResponseDefaultTypeInternal _WechatOauth2QrConnectResponse_default_instance_;
constexpr WechatOauth2LoginResponse::WechatOauth2LoginResponse(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : privilege_()
  , unionid_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string)
  , openid_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string)
  , nickname_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string)
  , province_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string)
  , city_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string)
  , country_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string)
  , headimgurl_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string)
  , sex_(0)
{}
struct WechatOauth2LoginResponseDefaultTypeInternal {
  constexpr WechatOauth2LoginResponseDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~WechatOauth2LoginResponseDefaultTypeInternal() {}
  union {
    WechatOauth2LoginResponse _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT WechatOauth2LoginResponseDefaultTypeInternal _WechatOauth2LoginResponse_default_instance_;
constexpr WechatOauth2LoginRequest::WechatOauth2LoginRequest(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : app_id_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string)
  , code_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string)
  , state_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string)
  , language_(0)
{}
struct WechatOauth2LoginRequestDefaultTypeInternal {
  constexpr WechatOauth2LoginRequestDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~WechatOauth2LoginRequestDefaultTypeInternal() {}
  union {
    WechatOauth2LoginRequest _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT WechatOauth2LoginRequestDefaultTypeInternal _WechatOauth2LoginRequest_default_instance_;
}  // namespace v1
}  // namespace orchid
}  // namespace palm
static ::PROTOBUF_NAMESPACE_ID::Metadata file_level_metadata_orchid_2eproto[8];
static const ::PROTOBUF_NAMESPACE_ID::EnumDescriptor* file_level_enum_descriptors_orchid_2eproto[2];
static constexpr ::PROTOBUF_NAMESPACE_ID::ServiceDescriptor const** file_level_service_descriptors_orchid_2eproto = nullptr;

const uint32_t TableStruct_orchid_2eproto::offsets[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::palm::orchid::v1::WechatMiniProgramLoginRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::palm::orchid::v1::WechatMiniProgramLoginRequest, app_id_),
  PROTOBUF_FIELD_OFFSET(::palm::orchid::v1::WechatMiniProgramLoginRequest, code_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::palm::orchid::v1::WechatMiniProgramLoginResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::palm::orchid::v1::WechatMiniProgramLoginResponse, unionid_),
  PROTOBUF_FIELD_OFFSET(::palm::orchid::v1::WechatMiniProgramLoginResponse, openid_),
  PROTOBUF_FIELD_OFFSET(::palm::orchid::v1::WechatMiniProgramLoginResponse, session_key_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::palm::orchid::v1::WechatMiniProgramPhoneNumberRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::palm::orchid::v1::WechatMiniProgramPhoneNumberRequest, app_id_),
  PROTOBUF_FIELD_OFFSET(::palm::orchid::v1::WechatMiniProgramPhoneNumberRequest, code_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::palm::orchid::v1::WechatMiniProgramPhoneNumberResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::palm::orchid::v1::WechatMiniProgramPhoneNumberResponse, phone_number_),
  PROTOBUF_FIELD_OFFSET(::palm::orchid::v1::WechatMiniProgramPhoneNumberResponse, pure_phone_number_),
  PROTOBUF_FIELD_OFFSET(::palm::orchid::v1::WechatMiniProgramPhoneNumberResponse, country_code_),
  PROTOBUF_FIELD_OFFSET(::palm::orchid::v1::WechatMiniProgramPhoneNumberResponse, water_mark_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::palm::orchid::v1::WechatOauth2QrConnectRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::palm::orchid::v1::WechatOauth2QrConnectRequest, app_id_),
  PROTOBUF_FIELD_OFFSET(::palm::orchid::v1::WechatOauth2QrConnectRequest, redirect_uri_),
  PROTOBUF_FIELD_OFFSET(::palm::orchid::v1::WechatOauth2QrConnectRequest, state_),
  PROTOBUF_FIELD_OFFSET(::palm::orchid::v1::WechatOauth2QrConnectRequest, language_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::palm::orchid::v1::WechatOauth2QrConnectResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::palm::orchid::v1::WechatOauth2QrConnectResponse, url_),
  PROTOBUF_FIELD_OFFSET(::palm::orchid::v1::WechatOauth2LoginResponse, _has_bits_),
  PROTOBUF_FIELD_OFFSET(::palm::orchid::v1::WechatOauth2LoginResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::palm::orchid::v1::WechatOauth2LoginResponse, unionid_),
  PROTOBUF_FIELD_OFFSET(::palm::orchid::v1::WechatOauth2LoginResponse, openid_),
  PROTOBUF_FIELD_OFFSET(::palm::orchid::v1::WechatOauth2LoginResponse, nickname_),
  PROTOBUF_FIELD_OFFSET(::palm::orchid::v1::WechatOauth2LoginResponse, sex_),
  PROTOBUF_FIELD_OFFSET(::palm::orchid::v1::WechatOauth2LoginResponse, province_),
  PROTOBUF_FIELD_OFFSET(::palm::orchid::v1::WechatOauth2LoginResponse, city_),
  PROTOBUF_FIELD_OFFSET(::palm::orchid::v1::WechatOauth2LoginResponse, country_),
  PROTOBUF_FIELD_OFFSET(::palm::orchid::v1::WechatOauth2LoginResponse, headimgurl_),
  PROTOBUF_FIELD_OFFSET(::palm::orchid::v1::WechatOauth2LoginResponse, privilege_),
  ~0u,
  ~0u,
  ~0u,
  ~0u,
  ~0u,
  ~0u,
  ~0u,
  0,
  ~0u,
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::palm::orchid::v1::WechatOauth2LoginRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::palm::orchid::v1::WechatOauth2LoginRequest, app_id_),
  PROTOBUF_FIELD_OFFSET(::palm::orchid::v1::WechatOauth2LoginRequest, code_),
  PROTOBUF_FIELD_OFFSET(::palm::orchid::v1::WechatOauth2LoginRequest, state_),
  PROTOBUF_FIELD_OFFSET(::palm::orchid::v1::WechatOauth2LoginRequest, language_),
};
static const ::PROTOBUF_NAMESPACE_ID::internal::MigrationSchema schemas[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
  { 0, -1, -1, sizeof(::palm::orchid::v1::WechatMiniProgramLoginRequest)},
  { 8, -1, -1, sizeof(::palm::orchid::v1::WechatMiniProgramLoginResponse)},
  { 17, -1, -1, sizeof(::palm::orchid::v1::WechatMiniProgramPhoneNumberRequest)},
  { 25, -1, -1, sizeof(::palm::orchid::v1::WechatMiniProgramPhoneNumberResponse)},
  { 35, -1, -1, sizeof(::palm::orchid::v1::WechatOauth2QrConnectRequest)},
  { 45, -1, -1, sizeof(::palm::orchid::v1::WechatOauth2QrConnectResponse)},
  { 52, 67, -1, sizeof(::palm::orchid::v1::WechatOauth2LoginResponse)},
  { 76, -1, -1, sizeof(::palm::orchid::v1::WechatOauth2LoginRequest)},
};

static ::PROTOBUF_NAMESPACE_ID::Message const * const file_default_instances[] = {
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::palm::orchid::v1::_WechatMiniProgramLoginRequest_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::palm::orchid::v1::_WechatMiniProgramLoginResponse_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::palm::orchid::v1::_WechatMiniProgramPhoneNumberRequest_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::palm::orchid::v1::_WechatMiniProgramPhoneNumberResponse_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::palm::orchid::v1::_WechatOauth2QrConnectRequest_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::palm::orchid::v1::_WechatOauth2QrConnectResponse_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::palm::orchid::v1::_WechatOauth2LoginResponse_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::palm::orchid::v1::_WechatOauth2LoginRequest_default_instance_),
};

const char descriptor_table_protodef_orchid_2eproto[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) =
  "\n\014orchid.proto\022\016palm.orchid.v1\"=\n\035Wechat"
  "MiniProgramLoginRequest\022\016\n\006app_id\030\001 \001(\t\022"
  "\014\n\004code\030\002 \001(\t\"V\n\036WechatMiniProgramLoginR"
  "esponse\022\017\n\007unionid\030\001 \001(\t\022\016\n\006openid\030\002 \001(\t"
  "\022\023\n\013session_key\030\003 \001(\t\"C\n#WechatMiniProgr"
  "amPhoneNumberRequest\022\016\n\006app_id\030\001 \001(\t\022\014\n\004"
  "code\030\002 \001(\t\"\201\001\n$WechatMiniProgramPhoneNum"
  "berResponse\022\024\n\014phone_number\030\001 \001(\t\022\031\n\021pur"
  "e_phone_number\030\002 \001(\t\022\024\n\014country_code\030\003 \001"
  "(\t\022\022\n\nwater_mark\030\004 \001(\004\"\300\001\n\034WechatOauth2Q"
  "rConnectRequest\022\016\n\006app_id\030\001 \001(\t\022\024\n\014redir"
  "ect_uri\030\002 \001(\t\022\r\n\005state\030\003 \001(\t\022G\n\010language"
  "\030\t \001(\01625.palm.orchid.v1.WechatOauth2QrCo"
  "nnectRequest.Language\"\"\n\010Language\022\006\n\002EN\020"
  "\000\022\006\n\002CN\020\001\022\006\n\002TW\020\002\",\n\035WechatOauth2QrConne"
  "ctResponse\022\013\n\003url\030\001 \001(\t\"\223\002\n\031WechatOauth2"
  "LoginResponse\022\017\n\007unionid\030\001 \001(\t\022\016\n\006openid"
  "\030\002 \001(\t\022\020\n\010nickname\030\013 \001(\t\022:\n\003sex\030\014 \001(\0162-."
  "palm.orchid.v1.WechatOauth2LoginResponse"
  ".Sex\022\020\n\010province\030\r \001(\t\022\014\n\004city\030\016 \001(\t\022\017\n\007"
  "country\030\017 \001(\t\022\027\n\nheadimgurl\030\020 \001(\tH\000\210\001\001\022\021"
  "\n\tprivilege\030\021 \003(\t\"\033\n\003Sex\022\010\n\004MALE\020\000\022\n\n\006FE"
  "MALE\020\001B\r\n\013_headimgurl\"\220\001\n\030WechatOauth2Lo"
  "ginRequest\022\016\n\006app_id\030\001 \001(\t\022\014\n\004code\030\002 \001(\t"
  "\022\r\n\005state\030\003 \001(\t\022G\n\010language\030\t \001(\01625.palm"
  ".orchid.v1.WechatOauth2QrConnectRequest."
  "Language2\371\001\n\021WechatMiniProgram\022h\n\005Login\022"
  "-.palm.orchid.v1.WechatMiniProgramLoginR"
  "equest\032..palm.orchid.v1.WechatMiniProgra"
  "mLoginResponse\"\000\022z\n\013PhoneNumber\0223.palm.o"
  "rchid.v1.WechatMiniProgramPhoneNumberReq"
  "uest\0324.palm.orchid.v1.WechatMiniProgramP"
  "honeNumberResponse\"\0002\332\001\n\014WechatOauth2\022j\n"
  "\tQrConnect\022,.palm.orchid.v1.WechatOauth2"
  "QrConnectRequest\032-.palm.orchid.v1.Wechat"
  "Oauth2QrConnectResponse\"\000\022^\n\005Login\022(.pal"
  "m.orchid.v1.WechatOauth2LoginRequest\032).p"
  "alm.orchid.v1.WechatOauth2LoginResponse\""
  "\000BV\n,com.github.saturn_xiv.palm.plugins."
  "orchid.v1P\001Z$github.com/saturn_xiv/palm/"
  "orchid/v2b\006proto3"
  ;
static ::PROTOBUF_NAMESPACE_ID::internal::once_flag descriptor_table_orchid_2eproto_once;
const ::PROTOBUF_NAMESPACE_ID::internal::DescriptorTable descriptor_table_orchid_2eproto = {
  false, false, 1617, descriptor_table_protodef_orchid_2eproto, "orchid.proto", 
  &descriptor_table_orchid_2eproto_once, nullptr, 0, 8,
  schemas, file_default_instances, TableStruct_orchid_2eproto::offsets,
  file_level_metadata_orchid_2eproto, file_level_enum_descriptors_orchid_2eproto, file_level_service_descriptors_orchid_2eproto,
};
PROTOBUF_ATTRIBUTE_WEAK const ::PROTOBUF_NAMESPACE_ID::internal::DescriptorTable* descriptor_table_orchid_2eproto_getter() {
  return &descriptor_table_orchid_2eproto;
}

// Force running AddDescriptors() at dynamic initialization time.
PROTOBUF_ATTRIBUTE_INIT_PRIORITY static ::PROTOBUF_NAMESPACE_ID::internal::AddDescriptorsRunner dynamic_init_dummy_orchid_2eproto(&descriptor_table_orchid_2eproto);
namespace palm {
namespace orchid {
namespace v1 {
const ::PROTOBUF_NAMESPACE_ID::EnumDescriptor* WechatOauth2QrConnectRequest_Language_descriptor() {
  ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&descriptor_table_orchid_2eproto);
  return file_level_enum_descriptors_orchid_2eproto[0];
}
bool WechatOauth2QrConnectRequest_Language_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
      return true;
    default:
      return false;
  }
}

#if (__cplusplus < 201703) && (!defined(_MSC_VER) || (_MSC_VER >= 1900 && _MSC_VER < 1912))
constexpr WechatOauth2QrConnectRequest_Language WechatOauth2QrConnectRequest::EN;
constexpr WechatOauth2QrConnectRequest_Language WechatOauth2QrConnectRequest::CN;
constexpr WechatOauth2QrConnectRequest_Language WechatOauth2QrConnectRequest::TW;
constexpr WechatOauth2QrConnectRequest_Language WechatOauth2QrConnectRequest::Language_MIN;
constexpr WechatOauth2QrConnectRequest_Language WechatOauth2QrConnectRequest::Language_MAX;
constexpr int WechatOauth2QrConnectRequest::Language_ARRAYSIZE;
#endif  // (__cplusplus < 201703) && (!defined(_MSC_VER) || (_MSC_VER >= 1900 && _MSC_VER < 1912))
const ::PROTOBUF_NAMESPACE_ID::EnumDescriptor* WechatOauth2LoginResponse_Sex_descriptor() {
  ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&descriptor_table_orchid_2eproto);
  return file_level_enum_descriptors_orchid_2eproto[1];
}
bool WechatOauth2LoginResponse_Sex_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
      return true;
    default:
      return false;
  }
}

#if (__cplusplus < 201703) && (!defined(_MSC_VER) || (_MSC_VER >= 1900 && _MSC_VER < 1912))
constexpr WechatOauth2LoginResponse_Sex WechatOauth2LoginResponse::MALE;
constexpr WechatOauth2LoginResponse_Sex WechatOauth2LoginResponse::FEMALE;
constexpr WechatOauth2LoginResponse_Sex WechatOauth2LoginResponse::Sex_MIN;
constexpr WechatOauth2LoginResponse_Sex WechatOauth2LoginResponse::Sex_MAX;
constexpr int WechatOauth2LoginResponse::Sex_ARRAYSIZE;
#endif  // (__cplusplus < 201703) && (!defined(_MSC_VER) || (_MSC_VER >= 1900 && _MSC_VER < 1912))

// ===================================================================

class WechatMiniProgramLoginRequest::_Internal {
 public:
};

WechatMiniProgramLoginRequest::WechatMiniProgramLoginRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor();
  if (!is_message_owned) {
    RegisterArenaDtor(arena);
  }
  // @@protoc_insertion_point(arena_constructor:palm.orchid.v1.WechatMiniProgramLoginRequest)
}
WechatMiniProgramLoginRequest::WechatMiniProgramLoginRequest(const WechatMiniProgramLoginRequest& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  app_id_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    app_id_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), "", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_app_id().empty()) {
    app_id_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_app_id(), 
      GetArenaForAllocation());
  }
  code_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    code_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), "", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_code().empty()) {
    code_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_code(), 
      GetArenaForAllocation());
  }
  // @@protoc_insertion_point(copy_constructor:palm.orchid.v1.WechatMiniProgramLoginRequest)
}

inline void WechatMiniProgramLoginRequest::SharedCtor() {
app_id_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  app_id_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), "", GetArenaForAllocation());
#endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
code_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  code_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), "", GetArenaForAllocation());
#endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
}

WechatMiniProgramLoginRequest::~WechatMiniProgramLoginRequest() {
  // @@protoc_insertion_point(destructor:palm.orchid.v1.WechatMiniProgramLoginRequest)
  if (GetArenaForAllocation() != nullptr) return;
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

inline void WechatMiniProgramLoginRequest::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  app_id_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  code_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

void WechatMiniProgramLoginRequest::ArenaDtor(void* object) {
  WechatMiniProgramLoginRequest* _this = reinterpret_cast< WechatMiniProgramLoginRequest* >(object);
  (void)_this;
}
void WechatMiniProgramLoginRequest::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void WechatMiniProgramLoginRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void WechatMiniProgramLoginRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:palm.orchid.v1.WechatMiniProgramLoginRequest)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  app_id_.ClearToEmpty();
  code_.ClearToEmpty();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* WechatMiniProgramLoginRequest::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // string app_id = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          auto str = _internal_mutable_app_id();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "palm.orchid.v1.WechatMiniProgramLoginRequest.app_id"));
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // string code = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 18)) {
          auto str = _internal_mutable_code();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "palm.orchid.v1.WechatMiniProgramLoginRequest.code"));
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* WechatMiniProgramLoginRequest::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:palm.orchid.v1.WechatMiniProgramLoginRequest)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // string app_id = 1;
  if (!this->_internal_app_id().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_app_id().data(), static_cast<int>(this->_internal_app_id().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "palm.orchid.v1.WechatMiniProgramLoginRequest.app_id");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_app_id(), target);
  }

  // string code = 2;
  if (!this->_internal_code().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_code().data(), static_cast<int>(this->_internal_code().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "palm.orchid.v1.WechatMiniProgramLoginRequest.code");
    target = stream->WriteStringMaybeAliased(
        2, this->_internal_code(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:palm.orchid.v1.WechatMiniProgramLoginRequest)
  return target;
}

size_t WechatMiniProgramLoginRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:palm.orchid.v1.WechatMiniProgramLoginRequest)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string app_id = 1;
  if (!this->_internal_app_id().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_app_id());
  }

  // string code = 2;
  if (!this->_internal_code().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_code());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData WechatMiniProgramLoginRequest::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSizeCheck,
    WechatMiniProgramLoginRequest::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*WechatMiniProgramLoginRequest::GetClassData() const { return &_class_data_; }

void WechatMiniProgramLoginRequest::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to,
                      const ::PROTOBUF_NAMESPACE_ID::Message& from) {
  static_cast<WechatMiniProgramLoginRequest *>(to)->MergeFrom(
      static_cast<const WechatMiniProgramLoginRequest &>(from));
}


void WechatMiniProgramLoginRequest::MergeFrom(const WechatMiniProgramLoginRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:palm.orchid.v1.WechatMiniProgramLoginRequest)
  GOOGLE_DCHECK_NE(&from, this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_app_id().empty()) {
    _internal_set_app_id(from._internal_app_id());
  }
  if (!from._internal_code().empty()) {
    _internal_set_code(from._internal_code());
  }
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void WechatMiniProgramLoginRequest::CopyFrom(const WechatMiniProgramLoginRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:palm.orchid.v1.WechatMiniProgramLoginRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool WechatMiniProgramLoginRequest::IsInitialized() const {
  return true;
}

void WechatMiniProgramLoginRequest::InternalSwap(WechatMiniProgramLoginRequest* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      &app_id_, lhs_arena,
      &other->app_id_, rhs_arena
  );
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      &code_, lhs_arena,
      &other->code_, rhs_arena
  );
}

::PROTOBUF_NAMESPACE_ID::Metadata WechatMiniProgramLoginRequest::GetMetadata() const {
  return ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(
      &descriptor_table_orchid_2eproto_getter, &descriptor_table_orchid_2eproto_once,
      file_level_metadata_orchid_2eproto[0]);
}

// ===================================================================

class WechatMiniProgramLoginResponse::_Internal {
 public:
};

WechatMiniProgramLoginResponse::WechatMiniProgramLoginResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor();
  if (!is_message_owned) {
    RegisterArenaDtor(arena);
  }
  // @@protoc_insertion_point(arena_constructor:palm.orchid.v1.WechatMiniProgramLoginResponse)
}
WechatMiniProgramLoginResponse::WechatMiniProgramLoginResponse(const WechatMiniProgramLoginResponse& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  unionid_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    unionid_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), "", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_unionid().empty()) {
    unionid_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_unionid(), 
      GetArenaForAllocation());
  }
  openid_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    openid_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), "", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_openid().empty()) {
    openid_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_openid(), 
      GetArenaForAllocation());
  }
  session_key_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    session_key_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), "", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_session_key().empty()) {
    session_key_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_session_key(), 
      GetArenaForAllocation());
  }
  // @@protoc_insertion_point(copy_constructor:palm.orchid.v1.WechatMiniProgramLoginResponse)
}

inline void WechatMiniProgramLoginResponse::SharedCtor() {
unionid_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  unionid_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), "", GetArenaForAllocation());
#endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
openid_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  openid_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), "", GetArenaForAllocation());
#endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
session_key_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  session_key_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), "", GetArenaForAllocation());
#endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
}

WechatMiniProgramLoginResponse::~WechatMiniProgramLoginResponse() {
  // @@protoc_insertion_point(destructor:palm.orchid.v1.WechatMiniProgramLoginResponse)
  if (GetArenaForAllocation() != nullptr) return;
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

inline void WechatMiniProgramLoginResponse::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  unionid_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  openid_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  session_key_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

void WechatMiniProgramLoginResponse::ArenaDtor(void* object) {
  WechatMiniProgramLoginResponse* _this = reinterpret_cast< WechatMiniProgramLoginResponse* >(object);
  (void)_this;
}
void WechatMiniProgramLoginResponse::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void WechatMiniProgramLoginResponse::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void WechatMiniProgramLoginResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:palm.orchid.v1.WechatMiniProgramLoginResponse)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  unionid_.ClearToEmpty();
  openid_.ClearToEmpty();
  session_key_.ClearToEmpty();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* WechatMiniProgramLoginResponse::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // string unionid = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          auto str = _internal_mutable_unionid();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "palm.orchid.v1.WechatMiniProgramLoginResponse.unionid"));
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // string openid = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 18)) {
          auto str = _internal_mutable_openid();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "palm.orchid.v1.WechatMiniProgramLoginResponse.openid"));
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // string session_key = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 26)) {
          auto str = _internal_mutable_session_key();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "palm.orchid.v1.WechatMiniProgramLoginResponse.session_key"));
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* WechatMiniProgramLoginResponse::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:palm.orchid.v1.WechatMiniProgramLoginResponse)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // string unionid = 1;
  if (!this->_internal_unionid().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_unionid().data(), static_cast<int>(this->_internal_unionid().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "palm.orchid.v1.WechatMiniProgramLoginResponse.unionid");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_unionid(), target);
  }

  // string openid = 2;
  if (!this->_internal_openid().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_openid().data(), static_cast<int>(this->_internal_openid().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "palm.orchid.v1.WechatMiniProgramLoginResponse.openid");
    target = stream->WriteStringMaybeAliased(
        2, this->_internal_openid(), target);
  }

  // string session_key = 3;
  if (!this->_internal_session_key().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_session_key().data(), static_cast<int>(this->_internal_session_key().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "palm.orchid.v1.WechatMiniProgramLoginResponse.session_key");
    target = stream->WriteStringMaybeAliased(
        3, this->_internal_session_key(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:palm.orchid.v1.WechatMiniProgramLoginResponse)
  return target;
}

size_t WechatMiniProgramLoginResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:palm.orchid.v1.WechatMiniProgramLoginResponse)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string unionid = 1;
  if (!this->_internal_unionid().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_unionid());
  }

  // string openid = 2;
  if (!this->_internal_openid().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_openid());
  }

  // string session_key = 3;
  if (!this->_internal_session_key().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_session_key());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData WechatMiniProgramLoginResponse::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSizeCheck,
    WechatMiniProgramLoginResponse::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*WechatMiniProgramLoginResponse::GetClassData() const { return &_class_data_; }

void WechatMiniProgramLoginResponse::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to,
                      const ::PROTOBUF_NAMESPACE_ID::Message& from) {
  static_cast<WechatMiniProgramLoginResponse *>(to)->MergeFrom(
      static_cast<const WechatMiniProgramLoginResponse &>(from));
}


void WechatMiniProgramLoginResponse::MergeFrom(const WechatMiniProgramLoginResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:palm.orchid.v1.WechatMiniProgramLoginResponse)
  GOOGLE_DCHECK_NE(&from, this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_unionid().empty()) {
    _internal_set_unionid(from._internal_unionid());
  }
  if (!from._internal_openid().empty()) {
    _internal_set_openid(from._internal_openid());
  }
  if (!from._internal_session_key().empty()) {
    _internal_set_session_key(from._internal_session_key());
  }
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void WechatMiniProgramLoginResponse::CopyFrom(const WechatMiniProgramLoginResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:palm.orchid.v1.WechatMiniProgramLoginResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool WechatMiniProgramLoginResponse::IsInitialized() const {
  return true;
}

void WechatMiniProgramLoginResponse::InternalSwap(WechatMiniProgramLoginResponse* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      &unionid_, lhs_arena,
      &other->unionid_, rhs_arena
  );
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      &openid_, lhs_arena,
      &other->openid_, rhs_arena
  );
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      &session_key_, lhs_arena,
      &other->session_key_, rhs_arena
  );
}

::PROTOBUF_NAMESPACE_ID::Metadata WechatMiniProgramLoginResponse::GetMetadata() const {
  return ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(
      &descriptor_table_orchid_2eproto_getter, &descriptor_table_orchid_2eproto_once,
      file_level_metadata_orchid_2eproto[1]);
}

// ===================================================================

class WechatMiniProgramPhoneNumberRequest::_Internal {
 public:
};

WechatMiniProgramPhoneNumberRequest::WechatMiniProgramPhoneNumberRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor();
  if (!is_message_owned) {
    RegisterArenaDtor(arena);
  }
  // @@protoc_insertion_point(arena_constructor:palm.orchid.v1.WechatMiniProgramPhoneNumberRequest)
}
WechatMiniProgramPhoneNumberRequest::WechatMiniProgramPhoneNumberRequest(const WechatMiniProgramPhoneNumberRequest& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  app_id_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    app_id_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), "", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_app_id().empty()) {
    app_id_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_app_id(), 
      GetArenaForAllocation());
  }
  code_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    code_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), "", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_code().empty()) {
    code_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_code(), 
      GetArenaForAllocation());
  }
  // @@protoc_insertion_point(copy_constructor:palm.orchid.v1.WechatMiniProgramPhoneNumberRequest)
}

inline void WechatMiniProgramPhoneNumberRequest::SharedCtor() {
app_id_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  app_id_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), "", GetArenaForAllocation());
#endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
code_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  code_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), "", GetArenaForAllocation());
#endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
}

WechatMiniProgramPhoneNumberRequest::~WechatMiniProgramPhoneNumberRequest() {
  // @@protoc_insertion_point(destructor:palm.orchid.v1.WechatMiniProgramPhoneNumberRequest)
  if (GetArenaForAllocation() != nullptr) return;
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

inline void WechatMiniProgramPhoneNumberRequest::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  app_id_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  code_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

void WechatMiniProgramPhoneNumberRequest::ArenaDtor(void* object) {
  WechatMiniProgramPhoneNumberRequest* _this = reinterpret_cast< WechatMiniProgramPhoneNumberRequest* >(object);
  (void)_this;
}
void WechatMiniProgramPhoneNumberRequest::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void WechatMiniProgramPhoneNumberRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void WechatMiniProgramPhoneNumberRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:palm.orchid.v1.WechatMiniProgramPhoneNumberRequest)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  app_id_.ClearToEmpty();
  code_.ClearToEmpty();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* WechatMiniProgramPhoneNumberRequest::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // string app_id = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          auto str = _internal_mutable_app_id();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "palm.orchid.v1.WechatMiniProgramPhoneNumberRequest.app_id"));
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // string code = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 18)) {
          auto str = _internal_mutable_code();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "palm.orchid.v1.WechatMiniProgramPhoneNumberRequest.code"));
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* WechatMiniProgramPhoneNumberRequest::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:palm.orchid.v1.WechatMiniProgramPhoneNumberRequest)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // string app_id = 1;
  if (!this->_internal_app_id().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_app_id().data(), static_cast<int>(this->_internal_app_id().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "palm.orchid.v1.WechatMiniProgramPhoneNumberRequest.app_id");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_app_id(), target);
  }

  // string code = 2;
  if (!this->_internal_code().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_code().data(), static_cast<int>(this->_internal_code().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "palm.orchid.v1.WechatMiniProgramPhoneNumberRequest.code");
    target = stream->WriteStringMaybeAliased(
        2, this->_internal_code(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:palm.orchid.v1.WechatMiniProgramPhoneNumberRequest)
  return target;
}

size_t WechatMiniProgramPhoneNumberRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:palm.orchid.v1.WechatMiniProgramPhoneNumberRequest)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string app_id = 1;
  if (!this->_internal_app_id().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_app_id());
  }

  // string code = 2;
  if (!this->_internal_code().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_code());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData WechatMiniProgramPhoneNumberRequest::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSizeCheck,
    WechatMiniProgramPhoneNumberRequest::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*WechatMiniProgramPhoneNumberRequest::GetClassData() const { return &_class_data_; }

void WechatMiniProgramPhoneNumberRequest::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to,
                      const ::PROTOBUF_NAMESPACE_ID::Message& from) {
  static_cast<WechatMiniProgramPhoneNumberRequest *>(to)->MergeFrom(
      static_cast<const WechatMiniProgramPhoneNumberRequest &>(from));
}


void WechatMiniProgramPhoneNumberRequest::MergeFrom(const WechatMiniProgramPhoneNumberRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:palm.orchid.v1.WechatMiniProgramPhoneNumberRequest)
  GOOGLE_DCHECK_NE(&from, this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_app_id().empty()) {
    _internal_set_app_id(from._internal_app_id());
  }
  if (!from._internal_code().empty()) {
    _internal_set_code(from._internal_code());
  }
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void WechatMiniProgramPhoneNumberRequest::CopyFrom(const WechatMiniProgramPhoneNumberRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:palm.orchid.v1.WechatMiniProgramPhoneNumberRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool WechatMiniProgramPhoneNumberRequest::IsInitialized() const {
  return true;
}

void WechatMiniProgramPhoneNumberRequest::InternalSwap(WechatMiniProgramPhoneNumberRequest* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      &app_id_, lhs_arena,
      &other->app_id_, rhs_arena
  );
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      &code_, lhs_arena,
      &other->code_, rhs_arena
  );
}

::PROTOBUF_NAMESPACE_ID::Metadata WechatMiniProgramPhoneNumberRequest::GetMetadata() const {
  return ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(
      &descriptor_table_orchid_2eproto_getter, &descriptor_table_orchid_2eproto_once,
      file_level_metadata_orchid_2eproto[2]);
}

// ===================================================================

class WechatMiniProgramPhoneNumberResponse::_Internal {
 public:
};

WechatMiniProgramPhoneNumberResponse::WechatMiniProgramPhoneNumberResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor();
  if (!is_message_owned) {
    RegisterArenaDtor(arena);
  }
  // @@protoc_insertion_point(arena_constructor:palm.orchid.v1.WechatMiniProgramPhoneNumberResponse)
}
WechatMiniProgramPhoneNumberResponse::WechatMiniProgramPhoneNumberResponse(const WechatMiniProgramPhoneNumberResponse& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  phone_number_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    phone_number_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), "", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_phone_number().empty()) {
    phone_number_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_phone_number(), 
      GetArenaForAllocation());
  }
  pure_phone_number_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    pure_phone_number_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), "", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_pure_phone_number().empty()) {
    pure_phone_number_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_pure_phone_number(), 
      GetArenaForAllocation());
  }
  country_code_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    country_code_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), "", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_country_code().empty()) {
    country_code_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_country_code(), 
      GetArenaForAllocation());
  }
  water_mark_ = from.water_mark_;
  // @@protoc_insertion_point(copy_constructor:palm.orchid.v1.WechatMiniProgramPhoneNumberResponse)
}

inline void WechatMiniProgramPhoneNumberResponse::SharedCtor() {
phone_number_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  phone_number_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), "", GetArenaForAllocation());
#endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
pure_phone_number_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  pure_phone_number_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), "", GetArenaForAllocation());
#endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
country_code_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  country_code_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), "", GetArenaForAllocation());
#endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
water_mark_ = uint64_t{0u};
}

WechatMiniProgramPhoneNumberResponse::~WechatMiniProgramPhoneNumberResponse() {
  // @@protoc_insertion_point(destructor:palm.orchid.v1.WechatMiniProgramPhoneNumberResponse)
  if (GetArenaForAllocation() != nullptr) return;
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

inline void WechatMiniProgramPhoneNumberResponse::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  phone_number_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  pure_phone_number_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  country_code_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

void WechatMiniProgramPhoneNumberResponse::ArenaDtor(void* object) {
  WechatMiniProgramPhoneNumberResponse* _this = reinterpret_cast< WechatMiniProgramPhoneNumberResponse* >(object);
  (void)_this;
}
void WechatMiniProgramPhoneNumberResponse::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void WechatMiniProgramPhoneNumberResponse::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void WechatMiniProgramPhoneNumberResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:palm.orchid.v1.WechatMiniProgramPhoneNumberResponse)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  phone_number_.ClearToEmpty();
  pure_phone_number_.ClearToEmpty();
  country_code_.ClearToEmpty();
  water_mark_ = uint64_t{0u};
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* WechatMiniProgramPhoneNumberResponse::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // string phone_number = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          auto str = _internal_mutable_phone_number();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "palm.orchid.v1.WechatMiniProgramPhoneNumberResponse.phone_number"));
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // string pure_phone_number = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 18)) {
          auto str = _internal_mutable_pure_phone_number();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "palm.orchid.v1.WechatMiniProgramPhoneNumberResponse.pure_phone_number"));
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // string country_code = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 26)) {
          auto str = _internal_mutable_country_code();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "palm.orchid.v1.WechatMiniProgramPhoneNumberResponse.country_code"));
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // uint64 water_mark = 4;
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 32)) {
          water_mark_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* WechatMiniProgramPhoneNumberResponse::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:palm.orchid.v1.WechatMiniProgramPhoneNumberResponse)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // string phone_number = 1;
  if (!this->_internal_phone_number().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_phone_number().data(), static_cast<int>(this->_internal_phone_number().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "palm.orchid.v1.WechatMiniProgramPhoneNumberResponse.phone_number");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_phone_number(), target);
  }

  // string pure_phone_number = 2;
  if (!this->_internal_pure_phone_number().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_pure_phone_number().data(), static_cast<int>(this->_internal_pure_phone_number().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "palm.orchid.v1.WechatMiniProgramPhoneNumberResponse.pure_phone_number");
    target = stream->WriteStringMaybeAliased(
        2, this->_internal_pure_phone_number(), target);
  }

  // string country_code = 3;
  if (!this->_internal_country_code().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_country_code().data(), static_cast<int>(this->_internal_country_code().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "palm.orchid.v1.WechatMiniProgramPhoneNumberResponse.country_code");
    target = stream->WriteStringMaybeAliased(
        3, this->_internal_country_code(), target);
  }

  // uint64 water_mark = 4;
  if (this->_internal_water_mark() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt64ToArray(4, this->_internal_water_mark(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:palm.orchid.v1.WechatMiniProgramPhoneNumberResponse)
  return target;
}

size_t WechatMiniProgramPhoneNumberResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:palm.orchid.v1.WechatMiniProgramPhoneNumberResponse)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string phone_number = 1;
  if (!this->_internal_phone_number().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_phone_number());
  }

  // string pure_phone_number = 2;
  if (!this->_internal_pure_phone_number().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_pure_phone_number());
  }

  // string country_code = 3;
  if (!this->_internal_country_code().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_country_code());
  }

  // uint64 water_mark = 4;
  if (this->_internal_water_mark() != 0) {
    total_size += ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::UInt64SizePlusOne(this->_internal_water_mark());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData WechatMiniProgramPhoneNumberResponse::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSizeCheck,
    WechatMiniProgramPhoneNumberResponse::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*WechatMiniProgramPhoneNumberResponse::GetClassData() const { return &_class_data_; }

void WechatMiniProgramPhoneNumberResponse::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to,
                      const ::PROTOBUF_NAMESPACE_ID::Message& from) {
  static_cast<WechatMiniProgramPhoneNumberResponse *>(to)->MergeFrom(
      static_cast<const WechatMiniProgramPhoneNumberResponse &>(from));
}


void WechatMiniProgramPhoneNumberResponse::MergeFrom(const WechatMiniProgramPhoneNumberResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:palm.orchid.v1.WechatMiniProgramPhoneNumberResponse)
  GOOGLE_DCHECK_NE(&from, this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_phone_number().empty()) {
    _internal_set_phone_number(from._internal_phone_number());
  }
  if (!from._internal_pure_phone_number().empty()) {
    _internal_set_pure_phone_number(from._internal_pure_phone_number());
  }
  if (!from._internal_country_code().empty()) {
    _internal_set_country_code(from._internal_country_code());
  }
  if (from._internal_water_mark() != 0) {
    _internal_set_water_mark(from._internal_water_mark());
  }
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void WechatMiniProgramPhoneNumberResponse::CopyFrom(const WechatMiniProgramPhoneNumberResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:palm.orchid.v1.WechatMiniProgramPhoneNumberResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool WechatMiniProgramPhoneNumberResponse::IsInitialized() const {
  return true;
}

void WechatMiniProgramPhoneNumberResponse::InternalSwap(WechatMiniProgramPhoneNumberResponse* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      &phone_number_, lhs_arena,
      &other->phone_number_, rhs_arena
  );
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      &pure_phone_number_, lhs_arena,
      &other->pure_phone_number_, rhs_arena
  );
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      &country_code_, lhs_arena,
      &other->country_code_, rhs_arena
  );
  swap(water_mark_, other->water_mark_);
}

::PROTOBUF_NAMESPACE_ID::Metadata WechatMiniProgramPhoneNumberResponse::GetMetadata() const {
  return ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(
      &descriptor_table_orchid_2eproto_getter, &descriptor_table_orchid_2eproto_once,
      file_level_metadata_orchid_2eproto[3]);
}

// ===================================================================

class WechatOauth2QrConnectRequest::_Internal {
 public:
};

WechatOauth2QrConnectRequest::WechatOauth2QrConnectRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor();
  if (!is_message_owned) {
    RegisterArenaDtor(arena);
  }
  // @@protoc_insertion_point(arena_constructor:palm.orchid.v1.WechatOauth2QrConnectRequest)
}
WechatOauth2QrConnectRequest::WechatOauth2QrConnectRequest(const WechatOauth2QrConnectRequest& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  app_id_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    app_id_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), "", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_app_id().empty()) {
    app_id_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_app_id(), 
      GetArenaForAllocation());
  }
  redirect_uri_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    redirect_uri_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), "", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_redirect_uri().empty()) {
    redirect_uri_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_redirect_uri(), 
      GetArenaForAllocation());
  }
  state_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    state_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), "", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_state().empty()) {
    state_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_state(), 
      GetArenaForAllocation());
  }
  language_ = from.language_;
  // @@protoc_insertion_point(copy_constructor:palm.orchid.v1.WechatOauth2QrConnectRequest)
}

inline void WechatOauth2QrConnectRequest::SharedCtor() {
app_id_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  app_id_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), "", GetArenaForAllocation());
#endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
redirect_uri_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  redirect_uri_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), "", GetArenaForAllocation());
#endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
state_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  state_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), "", GetArenaForAllocation());
#endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
language_ = 0;
}

WechatOauth2QrConnectRequest::~WechatOauth2QrConnectRequest() {
  // @@protoc_insertion_point(destructor:palm.orchid.v1.WechatOauth2QrConnectRequest)
  if (GetArenaForAllocation() != nullptr) return;
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

inline void WechatOauth2QrConnectRequest::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  app_id_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  redirect_uri_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  state_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

void WechatOauth2QrConnectRequest::ArenaDtor(void* object) {
  WechatOauth2QrConnectRequest* _this = reinterpret_cast< WechatOauth2QrConnectRequest* >(object);
  (void)_this;
}
void WechatOauth2QrConnectRequest::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void WechatOauth2QrConnectRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void WechatOauth2QrConnectRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:palm.orchid.v1.WechatOauth2QrConnectRequest)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  app_id_.ClearToEmpty();
  redirect_uri_.ClearToEmpty();
  state_.ClearToEmpty();
  language_ = 0;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* WechatOauth2QrConnectRequest::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // string app_id = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          auto str = _internal_mutable_app_id();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "palm.orchid.v1.WechatOauth2QrConnectRequest.app_id"));
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // string redirect_uri = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 18)) {
          auto str = _internal_mutable_redirect_uri();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "palm.orchid.v1.WechatOauth2QrConnectRequest.redirect_uri"));
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // string state = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 26)) {
          auto str = _internal_mutable_state();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "palm.orchid.v1.WechatOauth2QrConnectRequest.state"));
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // .palm.orchid.v1.WechatOauth2QrConnectRequest.Language language = 9;
      case 9:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 72)) {
          uint64_t val = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
          _internal_set_language(static_cast<::palm::orchid::v1::WechatOauth2QrConnectRequest_Language>(val));
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* WechatOauth2QrConnectRequest::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:palm.orchid.v1.WechatOauth2QrConnectRequest)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // string app_id = 1;
  if (!this->_internal_app_id().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_app_id().data(), static_cast<int>(this->_internal_app_id().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "palm.orchid.v1.WechatOauth2QrConnectRequest.app_id");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_app_id(), target);
  }

  // string redirect_uri = 2;
  if (!this->_internal_redirect_uri().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_redirect_uri().data(), static_cast<int>(this->_internal_redirect_uri().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "palm.orchid.v1.WechatOauth2QrConnectRequest.redirect_uri");
    target = stream->WriteStringMaybeAliased(
        2, this->_internal_redirect_uri(), target);
  }

  // string state = 3;
  if (!this->_internal_state().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_state().data(), static_cast<int>(this->_internal_state().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "palm.orchid.v1.WechatOauth2QrConnectRequest.state");
    target = stream->WriteStringMaybeAliased(
        3, this->_internal_state(), target);
  }

  // .palm.orchid.v1.WechatOauth2QrConnectRequest.Language language = 9;
  if (this->_internal_language() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteEnumToArray(
      9, this->_internal_language(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:palm.orchid.v1.WechatOauth2QrConnectRequest)
  return target;
}

size_t WechatOauth2QrConnectRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:palm.orchid.v1.WechatOauth2QrConnectRequest)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string app_id = 1;
  if (!this->_internal_app_id().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_app_id());
  }

  // string redirect_uri = 2;
  if (!this->_internal_redirect_uri().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_redirect_uri());
  }

  // string state = 3;
  if (!this->_internal_state().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_state());
  }

  // .palm.orchid.v1.WechatOauth2QrConnectRequest.Language language = 9;
  if (this->_internal_language() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::EnumSize(this->_internal_language());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData WechatOauth2QrConnectRequest::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSizeCheck,
    WechatOauth2QrConnectRequest::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*WechatOauth2QrConnectRequest::GetClassData() const { return &_class_data_; }

void WechatOauth2QrConnectRequest::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to,
                      const ::PROTOBUF_NAMESPACE_ID::Message& from) {
  static_cast<WechatOauth2QrConnectRequest *>(to)->MergeFrom(
      static_cast<const WechatOauth2QrConnectRequest &>(from));
}


void WechatOauth2QrConnectRequest::MergeFrom(const WechatOauth2QrConnectRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:palm.orchid.v1.WechatOauth2QrConnectRequest)
  GOOGLE_DCHECK_NE(&from, this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_app_id().empty()) {
    _internal_set_app_id(from._internal_app_id());
  }
  if (!from._internal_redirect_uri().empty()) {
    _internal_set_redirect_uri(from._internal_redirect_uri());
  }
  if (!from._internal_state().empty()) {
    _internal_set_state(from._internal_state());
  }
  if (from._internal_language() != 0) {
    _internal_set_language(from._internal_language());
  }
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void WechatOauth2QrConnectRequest::CopyFrom(const WechatOauth2QrConnectRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:palm.orchid.v1.WechatOauth2QrConnectRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool WechatOauth2QrConnectRequest::IsInitialized() const {
  return true;
}

void WechatOauth2QrConnectRequest::InternalSwap(WechatOauth2QrConnectRequest* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      &app_id_, lhs_arena,
      &other->app_id_, rhs_arena
  );
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      &redirect_uri_, lhs_arena,
      &other->redirect_uri_, rhs_arena
  );
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      &state_, lhs_arena,
      &other->state_, rhs_arena
  );
  swap(language_, other->language_);
}

::PROTOBUF_NAMESPACE_ID::Metadata WechatOauth2QrConnectRequest::GetMetadata() const {
  return ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(
      &descriptor_table_orchid_2eproto_getter, &descriptor_table_orchid_2eproto_once,
      file_level_metadata_orchid_2eproto[4]);
}

// ===================================================================

class WechatOauth2QrConnectResponse::_Internal {
 public:
};

WechatOauth2QrConnectResponse::WechatOauth2QrConnectResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor();
  if (!is_message_owned) {
    RegisterArenaDtor(arena);
  }
  // @@protoc_insertion_point(arena_constructor:palm.orchid.v1.WechatOauth2QrConnectResponse)
}
WechatOauth2QrConnectResponse::WechatOauth2QrConnectResponse(const WechatOauth2QrConnectResponse& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  url_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    url_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), "", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_url().empty()) {
    url_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_url(), 
      GetArenaForAllocation());
  }
  // @@protoc_insertion_point(copy_constructor:palm.orchid.v1.WechatOauth2QrConnectResponse)
}

inline void WechatOauth2QrConnectResponse::SharedCtor() {
url_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  url_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), "", GetArenaForAllocation());
#endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
}

WechatOauth2QrConnectResponse::~WechatOauth2QrConnectResponse() {
  // @@protoc_insertion_point(destructor:palm.orchid.v1.WechatOauth2QrConnectResponse)
  if (GetArenaForAllocation() != nullptr) return;
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

inline void WechatOauth2QrConnectResponse::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  url_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

void WechatOauth2QrConnectResponse::ArenaDtor(void* object) {
  WechatOauth2QrConnectResponse* _this = reinterpret_cast< WechatOauth2QrConnectResponse* >(object);
  (void)_this;
}
void WechatOauth2QrConnectResponse::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void WechatOauth2QrConnectResponse::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void WechatOauth2QrConnectResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:palm.orchid.v1.WechatOauth2QrConnectResponse)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  url_.ClearToEmpty();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* WechatOauth2QrConnectResponse::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // string url = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          auto str = _internal_mutable_url();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "palm.orchid.v1.WechatOauth2QrConnectResponse.url"));
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* WechatOauth2QrConnectResponse::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:palm.orchid.v1.WechatOauth2QrConnectResponse)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // string url = 1;
  if (!this->_internal_url().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_url().data(), static_cast<int>(this->_internal_url().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "palm.orchid.v1.WechatOauth2QrConnectResponse.url");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_url(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:palm.orchid.v1.WechatOauth2QrConnectResponse)
  return target;
}

size_t WechatOauth2QrConnectResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:palm.orchid.v1.WechatOauth2QrConnectResponse)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string url = 1;
  if (!this->_internal_url().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_url());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData WechatOauth2QrConnectResponse::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSizeCheck,
    WechatOauth2QrConnectResponse::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*WechatOauth2QrConnectResponse::GetClassData() const { return &_class_data_; }

void WechatOauth2QrConnectResponse::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to,
                      const ::PROTOBUF_NAMESPACE_ID::Message& from) {
  static_cast<WechatOauth2QrConnectResponse *>(to)->MergeFrom(
      static_cast<const WechatOauth2QrConnectResponse &>(from));
}


void WechatOauth2QrConnectResponse::MergeFrom(const WechatOauth2QrConnectResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:palm.orchid.v1.WechatOauth2QrConnectResponse)
  GOOGLE_DCHECK_NE(&from, this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_url().empty()) {
    _internal_set_url(from._internal_url());
  }
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void WechatOauth2QrConnectResponse::CopyFrom(const WechatOauth2QrConnectResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:palm.orchid.v1.WechatOauth2QrConnectResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool WechatOauth2QrConnectResponse::IsInitialized() const {
  return true;
}

void WechatOauth2QrConnectResponse::InternalSwap(WechatOauth2QrConnectResponse* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      &url_, lhs_arena,
      &other->url_, rhs_arena
  );
}

::PROTOBUF_NAMESPACE_ID::Metadata WechatOauth2QrConnectResponse::GetMetadata() const {
  return ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(
      &descriptor_table_orchid_2eproto_getter, &descriptor_table_orchid_2eproto_once,
      file_level_metadata_orchid_2eproto[5]);
}

// ===================================================================

class WechatOauth2LoginResponse::_Internal {
 public:
  using HasBits = decltype(std::declval<WechatOauth2LoginResponse>()._has_bits_);
  static void set_has_headimgurl(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
};

WechatOauth2LoginResponse::WechatOauth2LoginResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned),
  privilege_(arena) {
  SharedCtor();
  if (!is_message_owned) {
    RegisterArenaDtor(arena);
  }
  // @@protoc_insertion_point(arena_constructor:palm.orchid.v1.WechatOauth2LoginResponse)
}
WechatOauth2LoginResponse::WechatOauth2LoginResponse(const WechatOauth2LoginResponse& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      _has_bits_(from._has_bits_),
      privilege_(from.privilege_) {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  unionid_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    unionid_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), "", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_unionid().empty()) {
    unionid_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_unionid(), 
      GetArenaForAllocation());
  }
  openid_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    openid_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), "", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_openid().empty()) {
    openid_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_openid(), 
      GetArenaForAllocation());
  }
  nickname_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    nickname_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), "", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_nickname().empty()) {
    nickname_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_nickname(), 
      GetArenaForAllocation());
  }
  province_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    province_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), "", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_province().empty()) {
    province_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_province(), 
      GetArenaForAllocation());
  }
  city_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    city_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), "", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_city().empty()) {
    city_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_city(), 
      GetArenaForAllocation());
  }
  country_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    country_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), "", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_country().empty()) {
    country_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_country(), 
      GetArenaForAllocation());
  }
  headimgurl_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    headimgurl_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), "", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (from._internal_has_headimgurl()) {
    headimgurl_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_headimgurl(), 
      GetArenaForAllocation());
  }
  sex_ = from.sex_;
  // @@protoc_insertion_point(copy_constructor:palm.orchid.v1.WechatOauth2LoginResponse)
}

inline void WechatOauth2LoginResponse::SharedCtor() {
unionid_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  unionid_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), "", GetArenaForAllocation());
#endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
openid_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  openid_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), "", GetArenaForAllocation());
#endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
nickname_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  nickname_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), "", GetArenaForAllocation());
#endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
province_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  province_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), "", GetArenaForAllocation());
#endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
city_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  city_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), "", GetArenaForAllocation());
#endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
country_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  country_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), "", GetArenaForAllocation());
#endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
headimgurl_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  headimgurl_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), "", GetArenaForAllocation());
#endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
sex_ = 0;
}

WechatOauth2LoginResponse::~WechatOauth2LoginResponse() {
  // @@protoc_insertion_point(destructor:palm.orchid.v1.WechatOauth2LoginResponse)
  if (GetArenaForAllocation() != nullptr) return;
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

inline void WechatOauth2LoginResponse::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  unionid_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  openid_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  nickname_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  province_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  city_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  country_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  headimgurl_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

void WechatOauth2LoginResponse::ArenaDtor(void* object) {
  WechatOauth2LoginResponse* _this = reinterpret_cast< WechatOauth2LoginResponse* >(object);
  (void)_this;
}
void WechatOauth2LoginResponse::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void WechatOauth2LoginResponse::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void WechatOauth2LoginResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:palm.orchid.v1.WechatOauth2LoginResponse)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  privilege_.Clear();
  unionid_.ClearToEmpty();
  openid_.ClearToEmpty();
  nickname_.ClearToEmpty();
  province_.ClearToEmpty();
  city_.ClearToEmpty();
  country_.ClearToEmpty();
  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    headimgurl_.ClearNonDefaultToEmpty();
  }
  sex_ = 0;
  _has_bits_.Clear();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* WechatOauth2LoginResponse::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  _Internal::HasBits has_bits{};
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // string unionid = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          auto str = _internal_mutable_unionid();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "palm.orchid.v1.WechatOauth2LoginResponse.unionid"));
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // string openid = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 18)) {
          auto str = _internal_mutable_openid();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "palm.orchid.v1.WechatOauth2LoginResponse.openid"));
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // string nickname = 11;
      case 11:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 90)) {
          auto str = _internal_mutable_nickname();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "palm.orchid.v1.WechatOauth2LoginResponse.nickname"));
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // .palm.orchid.v1.WechatOauth2LoginResponse.Sex sex = 12;
      case 12:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 96)) {
          uint64_t val = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
          _internal_set_sex(static_cast<::palm::orchid::v1::WechatOauth2LoginResponse_Sex>(val));
        } else
          goto handle_unusual;
        continue;
      // string province = 13;
      case 13:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 106)) {
          auto str = _internal_mutable_province();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "palm.orchid.v1.WechatOauth2LoginResponse.province"));
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // string city = 14;
      case 14:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 114)) {
          auto str = _internal_mutable_city();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "palm.orchid.v1.WechatOauth2LoginResponse.city"));
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // string country = 15;
      case 15:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 122)) {
          auto str = _internal_mutable_country();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "palm.orchid.v1.WechatOauth2LoginResponse.country"));
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // optional string headimgurl = 16;
      case 16:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 130)) {
          auto str = _internal_mutable_headimgurl();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "palm.orchid.v1.WechatOauth2LoginResponse.headimgurl"));
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // repeated string privilege = 17;
      case 17:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 138)) {
          ptr -= 2;
          do {
            ptr += 2;
            auto str = _internal_add_privilege();
            ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
            CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "palm.orchid.v1.WechatOauth2LoginResponse.privilege"));
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<138>(ptr));
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  _has_bits_.Or(has_bits);
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* WechatOauth2LoginResponse::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:palm.orchid.v1.WechatOauth2LoginResponse)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // string unionid = 1;
  if (!this->_internal_unionid().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_unionid().data(), static_cast<int>(this->_internal_unionid().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "palm.orchid.v1.WechatOauth2LoginResponse.unionid");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_unionid(), target);
  }

  // string openid = 2;
  if (!this->_internal_openid().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_openid().data(), static_cast<int>(this->_internal_openid().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "palm.orchid.v1.WechatOauth2LoginResponse.openid");
    target = stream->WriteStringMaybeAliased(
        2, this->_internal_openid(), target);
  }

  // string nickname = 11;
  if (!this->_internal_nickname().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_nickname().data(), static_cast<int>(this->_internal_nickname().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "palm.orchid.v1.WechatOauth2LoginResponse.nickname");
    target = stream->WriteStringMaybeAliased(
        11, this->_internal_nickname(), target);
  }

  // .palm.orchid.v1.WechatOauth2LoginResponse.Sex sex = 12;
  if (this->_internal_sex() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteEnumToArray(
      12, this->_internal_sex(), target);
  }

  // string province = 13;
  if (!this->_internal_province().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_province().data(), static_cast<int>(this->_internal_province().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "palm.orchid.v1.WechatOauth2LoginResponse.province");
    target = stream->WriteStringMaybeAliased(
        13, this->_internal_province(), target);
  }

  // string city = 14;
  if (!this->_internal_city().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_city().data(), static_cast<int>(this->_internal_city().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "palm.orchid.v1.WechatOauth2LoginResponse.city");
    target = stream->WriteStringMaybeAliased(
        14, this->_internal_city(), target);
  }

  // string country = 15;
  if (!this->_internal_country().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_country().data(), static_cast<int>(this->_internal_country().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "palm.orchid.v1.WechatOauth2LoginResponse.country");
    target = stream->WriteStringMaybeAliased(
        15, this->_internal_country(), target);
  }

  // optional string headimgurl = 16;
  if (_internal_has_headimgurl()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_headimgurl().data(), static_cast<int>(this->_internal_headimgurl().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "palm.orchid.v1.WechatOauth2LoginResponse.headimgurl");
    target = stream->WriteStringMaybeAliased(
        16, this->_internal_headimgurl(), target);
  }

  // repeated string privilege = 17;
  for (int i = 0, n = this->_internal_privilege_size(); i < n; i++) {
    const auto& s = this->_internal_privilege(i);
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      s.data(), static_cast<int>(s.length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "palm.orchid.v1.WechatOauth2LoginResponse.privilege");
    target = stream->WriteString(17, s, target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:palm.orchid.v1.WechatOauth2LoginResponse)
  return target;
}

size_t WechatOauth2LoginResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:palm.orchid.v1.WechatOauth2LoginResponse)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated string privilege = 17;
  total_size += 2 *
      ::PROTOBUF_NAMESPACE_ID::internal::FromIntSize(privilege_.size());
  for (int i = 0, n = privilege_.size(); i < n; i++) {
    total_size += ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
      privilege_.Get(i));
  }

  // string unionid = 1;
  if (!this->_internal_unionid().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_unionid());
  }

  // string openid = 2;
  if (!this->_internal_openid().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_openid());
  }

  // string nickname = 11;
  if (!this->_internal_nickname().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_nickname());
  }

  // string province = 13;
  if (!this->_internal_province().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_province());
  }

  // string city = 14;
  if (!this->_internal_city().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_city());
  }

  // string country = 15;
  if (!this->_internal_country().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_country());
  }

  // optional string headimgurl = 16;
  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    total_size += 2 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_headimgurl());
  }

  // .palm.orchid.v1.WechatOauth2LoginResponse.Sex sex = 12;
  if (this->_internal_sex() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::EnumSize(this->_internal_sex());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData WechatOauth2LoginResponse::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSizeCheck,
    WechatOauth2LoginResponse::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*WechatOauth2LoginResponse::GetClassData() const { return &_class_data_; }

void WechatOauth2LoginResponse::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to,
                      const ::PROTOBUF_NAMESPACE_ID::Message& from) {
  static_cast<WechatOauth2LoginResponse *>(to)->MergeFrom(
      static_cast<const WechatOauth2LoginResponse &>(from));
}


void WechatOauth2LoginResponse::MergeFrom(const WechatOauth2LoginResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:palm.orchid.v1.WechatOauth2LoginResponse)
  GOOGLE_DCHECK_NE(&from, this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  privilege_.MergeFrom(from.privilege_);
  if (!from._internal_unionid().empty()) {
    _internal_set_unionid(from._internal_unionid());
  }
  if (!from._internal_openid().empty()) {
    _internal_set_openid(from._internal_openid());
  }
  if (!from._internal_nickname().empty()) {
    _internal_set_nickname(from._internal_nickname());
  }
  if (!from._internal_province().empty()) {
    _internal_set_province(from._internal_province());
  }
  if (!from._internal_city().empty()) {
    _internal_set_city(from._internal_city());
  }
  if (!from._internal_country().empty()) {
    _internal_set_country(from._internal_country());
  }
  if (from._internal_has_headimgurl()) {
    _internal_set_headimgurl(from._internal_headimgurl());
  }
  if (from._internal_sex() != 0) {
    _internal_set_sex(from._internal_sex());
  }
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void WechatOauth2LoginResponse::CopyFrom(const WechatOauth2LoginResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:palm.orchid.v1.WechatOauth2LoginResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool WechatOauth2LoginResponse::IsInitialized() const {
  return true;
}

void WechatOauth2LoginResponse::InternalSwap(WechatOauth2LoginResponse* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  privilege_.InternalSwap(&other->privilege_);
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      &unionid_, lhs_arena,
      &other->unionid_, rhs_arena
  );
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      &openid_, lhs_arena,
      &other->openid_, rhs_arena
  );
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      &nickname_, lhs_arena,
      &other->nickname_, rhs_arena
  );
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      &province_, lhs_arena,
      &other->province_, rhs_arena
  );
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      &city_, lhs_arena,
      &other->city_, rhs_arena
  );
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      &country_, lhs_arena,
      &other->country_, rhs_arena
  );
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      &headimgurl_, lhs_arena,
      &other->headimgurl_, rhs_arena
  );
  swap(sex_, other->sex_);
}

::PROTOBUF_NAMESPACE_ID::Metadata WechatOauth2LoginResponse::GetMetadata() const {
  return ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(
      &descriptor_table_orchid_2eproto_getter, &descriptor_table_orchid_2eproto_once,
      file_level_metadata_orchid_2eproto[6]);
}

// ===================================================================

class WechatOauth2LoginRequest::_Internal {
 public:
};

WechatOauth2LoginRequest::WechatOauth2LoginRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor();
  if (!is_message_owned) {
    RegisterArenaDtor(arena);
  }
  // @@protoc_insertion_point(arena_constructor:palm.orchid.v1.WechatOauth2LoginRequest)
}
WechatOauth2LoginRequest::WechatOauth2LoginRequest(const WechatOauth2LoginRequest& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  app_id_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    app_id_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), "", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_app_id().empty()) {
    app_id_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_app_id(), 
      GetArenaForAllocation());
  }
  code_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    code_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), "", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_code().empty()) {
    code_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_code(), 
      GetArenaForAllocation());
  }
  state_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    state_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), "", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_state().empty()) {
    state_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_state(), 
      GetArenaForAllocation());
  }
  language_ = from.language_;
  // @@protoc_insertion_point(copy_constructor:palm.orchid.v1.WechatOauth2LoginRequest)
}

inline void WechatOauth2LoginRequest::SharedCtor() {
app_id_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  app_id_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), "", GetArenaForAllocation());
#endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
code_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  code_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), "", GetArenaForAllocation());
#endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
state_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  state_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), "", GetArenaForAllocation());
#endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
language_ = 0;
}

WechatOauth2LoginRequest::~WechatOauth2LoginRequest() {
  // @@protoc_insertion_point(destructor:palm.orchid.v1.WechatOauth2LoginRequest)
  if (GetArenaForAllocation() != nullptr) return;
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

inline void WechatOauth2LoginRequest::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  app_id_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  code_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  state_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

void WechatOauth2LoginRequest::ArenaDtor(void* object) {
  WechatOauth2LoginRequest* _this = reinterpret_cast< WechatOauth2LoginRequest* >(object);
  (void)_this;
}
void WechatOauth2LoginRequest::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void WechatOauth2LoginRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void WechatOauth2LoginRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:palm.orchid.v1.WechatOauth2LoginRequest)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  app_id_.ClearToEmpty();
  code_.ClearToEmpty();
  state_.ClearToEmpty();
  language_ = 0;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* WechatOauth2LoginRequest::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // string app_id = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          auto str = _internal_mutable_app_id();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "palm.orchid.v1.WechatOauth2LoginRequest.app_id"));
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // string code = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 18)) {
          auto str = _internal_mutable_code();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "palm.orchid.v1.WechatOauth2LoginRequest.code"));
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // string state = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 26)) {
          auto str = _internal_mutable_state();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "palm.orchid.v1.WechatOauth2LoginRequest.state"));
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // .palm.orchid.v1.WechatOauth2QrConnectRequest.Language language = 9;
      case 9:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 72)) {
          uint64_t val = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
          _internal_set_language(static_cast<::palm::orchid::v1::WechatOauth2QrConnectRequest_Language>(val));
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* WechatOauth2LoginRequest::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:palm.orchid.v1.WechatOauth2LoginRequest)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // string app_id = 1;
  if (!this->_internal_app_id().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_app_id().data(), static_cast<int>(this->_internal_app_id().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "palm.orchid.v1.WechatOauth2LoginRequest.app_id");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_app_id(), target);
  }

  // string code = 2;
  if (!this->_internal_code().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_code().data(), static_cast<int>(this->_internal_code().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "palm.orchid.v1.WechatOauth2LoginRequest.code");
    target = stream->WriteStringMaybeAliased(
        2, this->_internal_code(), target);
  }

  // string state = 3;
  if (!this->_internal_state().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_state().data(), static_cast<int>(this->_internal_state().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "palm.orchid.v1.WechatOauth2LoginRequest.state");
    target = stream->WriteStringMaybeAliased(
        3, this->_internal_state(), target);
  }

  // .palm.orchid.v1.WechatOauth2QrConnectRequest.Language language = 9;
  if (this->_internal_language() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteEnumToArray(
      9, this->_internal_language(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:palm.orchid.v1.WechatOauth2LoginRequest)
  return target;
}

size_t WechatOauth2LoginRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:palm.orchid.v1.WechatOauth2LoginRequest)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string app_id = 1;
  if (!this->_internal_app_id().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_app_id());
  }

  // string code = 2;
  if (!this->_internal_code().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_code());
  }

  // string state = 3;
  if (!this->_internal_state().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_state());
  }

  // .palm.orchid.v1.WechatOauth2QrConnectRequest.Language language = 9;
  if (this->_internal_language() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::EnumSize(this->_internal_language());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData WechatOauth2LoginRequest::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSizeCheck,
    WechatOauth2LoginRequest::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*WechatOauth2LoginRequest::GetClassData() const { return &_class_data_; }

void WechatOauth2LoginRequest::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to,
                      const ::PROTOBUF_NAMESPACE_ID::Message& from) {
  static_cast<WechatOauth2LoginRequest *>(to)->MergeFrom(
      static_cast<const WechatOauth2LoginRequest &>(from));
}


void WechatOauth2LoginRequest::MergeFrom(const WechatOauth2LoginRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:palm.orchid.v1.WechatOauth2LoginRequest)
  GOOGLE_DCHECK_NE(&from, this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_app_id().empty()) {
    _internal_set_app_id(from._internal_app_id());
  }
  if (!from._internal_code().empty()) {
    _internal_set_code(from._internal_code());
  }
  if (!from._internal_state().empty()) {
    _internal_set_state(from._internal_state());
  }
  if (from._internal_language() != 0) {
    _internal_set_language(from._internal_language());
  }
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void WechatOauth2LoginRequest::CopyFrom(const WechatOauth2LoginRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:palm.orchid.v1.WechatOauth2LoginRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool WechatOauth2LoginRequest::IsInitialized() const {
  return true;
}

void WechatOauth2LoginRequest::InternalSwap(WechatOauth2LoginRequest* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      &app_id_, lhs_arena,
      &other->app_id_, rhs_arena
  );
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      &code_, lhs_arena,
      &other->code_, rhs_arena
  );
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      &state_, lhs_arena,
      &other->state_, rhs_arena
  );
  swap(language_, other->language_);
}

::PROTOBUF_NAMESPACE_ID::Metadata WechatOauth2LoginRequest::GetMetadata() const {
  return ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(
      &descriptor_table_orchid_2eproto_getter, &descriptor_table_orchid_2eproto_once,
      file_level_metadata_orchid_2eproto[7]);
}

// @@protoc_insertion_point(namespace_scope)
}  // namespace v1
}  // namespace orchid
}  // namespace palm
PROTOBUF_NAMESPACE_OPEN
template<> PROTOBUF_NOINLINE ::palm::orchid::v1::WechatMiniProgramLoginRequest* Arena::CreateMaybeMessage< ::palm::orchid::v1::WechatMiniProgramLoginRequest >(Arena* arena) {
  return Arena::CreateMessageInternal< ::palm::orchid::v1::WechatMiniProgramLoginRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::palm::orchid::v1::WechatMiniProgramLoginResponse* Arena::CreateMaybeMessage< ::palm::orchid::v1::WechatMiniProgramLoginResponse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::palm::orchid::v1::WechatMiniProgramLoginResponse >(arena);
}
template<> PROTOBUF_NOINLINE ::palm::orchid::v1::WechatMiniProgramPhoneNumberRequest* Arena::CreateMaybeMessage< ::palm::orchid::v1::WechatMiniProgramPhoneNumberRequest >(Arena* arena) {
  return Arena::CreateMessageInternal< ::palm::orchid::v1::WechatMiniProgramPhoneNumberRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::palm::orchid::v1::WechatMiniProgramPhoneNumberResponse* Arena::CreateMaybeMessage< ::palm::orchid::v1::WechatMiniProgramPhoneNumberResponse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::palm::orchid::v1::WechatMiniProgramPhoneNumberResponse >(arena);
}
template<> PROTOBUF_NOINLINE ::palm::orchid::v1::WechatOauth2QrConnectRequest* Arena::CreateMaybeMessage< ::palm::orchid::v1::WechatOauth2QrConnectRequest >(Arena* arena) {
  return Arena::CreateMessageInternal< ::palm::orchid::v1::WechatOauth2QrConnectRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::palm::orchid::v1::WechatOauth2QrConnectResponse* Arena::CreateMaybeMessage< ::palm::orchid::v1::WechatOauth2QrConnectResponse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::palm::orchid::v1::WechatOauth2QrConnectResponse >(arena);
}
template<> PROTOBUF_NOINLINE ::palm::orchid::v1::WechatOauth2LoginResponse* Arena::CreateMaybeMessage< ::palm::orchid::v1::WechatOauth2LoginResponse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::palm::orchid::v1::WechatOauth2LoginResponse >(arena);
}
template<> PROTOBUF_NOINLINE ::palm::orchid::v1::WechatOauth2LoginRequest* Arena::CreateMaybeMessage< ::palm::orchid::v1::WechatOauth2LoginRequest >(Arena* arena) {
  return Arena::CreateMessageInternal< ::palm::orchid::v1::WechatOauth2LoginRequest >(arena);
}
PROTOBUF_NAMESPACE_CLOSE

// @@protoc_insertion_point(global_scope)
#include <google/protobuf/port_undef.inc>
